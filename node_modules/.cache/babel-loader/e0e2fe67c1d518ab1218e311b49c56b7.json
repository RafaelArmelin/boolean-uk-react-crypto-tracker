{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-crypto-tracker/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport MainDetail from \"./components/MainDetail\";\nimport SideListItem from \"./components/SideListItem\";\nimport { CRIPTO_LIST } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // This piece of state keeps the id from the selected coin to be displayed in the MainDetail component\n  const [selectedCripto, setSelectedCripto] = useState(null);\n  const [coins, setCoins] = useState([]); // This function gives you whether a coin has been selected or not\n  // You will need this for the SideListItem component\n\n  function isSelectedCripto(id) {\n    return selectedCripto === id;\n  }\n\n  useEffect(() => {\n    fetch(CRIPTO_LIST).then(response => response.json()).then(result => {\n      setCoins(result);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n\n    /* These (<> </>) are called React Fragments, and allow us to return more than one top element */\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"side-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: coins.map(coin => {\n            return /*#__PURE__*/_jsxDEV(SideListItem, {\n              item: coin,\n              isSelectedCripto: isSelectedCripto,\n              selectedCripto: selectedCripto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-detail\",\n        children: selectedCripto ? \"Create the main detail component here\" : \"Select a coin bro!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(App, \"wj8wRRPwcggrbyk7o2R2JMRqICI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafaelarmelin/Desktop/Boolean /REACT/boolean-uk-react-crypto-tracker/src/App.jsx"],"names":["useEffect","useState","MainDetail","SideListItem","CRIPTO_LIST","App","selectedCripto","setSelectedCripto","coins","setCoins","isSelectedCripto","id","fetch","then","response","json","result","map","coin"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAHa,CAKb;AACA;;AACA,WAASS,gBAAT,CAA0BC,EAA1B,EAA8B;AAC5B,WAAOL,cAAc,KAAKK,EAA1B;AACD;;AACDX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACR,WAAD,CAAL,CACGS,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChBP,MAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA;AAAA;;AACE;AACA;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA,+BACE;AAAA,oBACGR,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AACnB,gCACE,QAAC,YAAD;AACE,cAAA,IAAI,EAAEA,IADR;AAEE,cAAA,gBAAgB,EAAER,gBAFpB;AAGE,cAAA,cAAc,EAAEJ;AAHlB;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBACGA,cAAc,GACX,uCADW,GAEX;AAHN;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAFF;AAwBD;;GA1CQD,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport MainDetail from \"./components/MainDetail\";\nimport SideListItem from \"./components/SideListItem\";\nimport { CRIPTO_LIST } from \"./constants\";\n\nfunction App() {\n  // This piece of state keeps the id from the selected coin to be displayed in the MainDetail component\n  const [selectedCripto, setSelectedCripto] = useState(null);\n  const [coins, setCoins] = useState([]);\n\n  // This function gives you whether a coin has been selected or not\n  // You will need this for the SideListItem component\n  function isSelectedCripto(id) {\n    return selectedCripto === id;\n  }\n  useEffect(() => {\n    fetch(CRIPTO_LIST)\n      .then((response) => response.json())\n      .then((result) => {\n        setCoins(result);\n      });\n  }, []);\n\n  return (\n    /* These (<> </>) are called React Fragments, and allow us to return more than one top element */\n    <>\n      <aside className=\"side-list\">\n        <ul>\n          {coins.map((coin) => {\n            return (\n              <SideListItem\n                item={coin}\n                isSelectedCripto={isSelectedCripto}\n                selectedCripto={selectedCripto}\n              />\n            );\n          })}\n        </ul>\n      </aside>\n      <main className=\"main-detail\">\n        {selectedCripto\n          ? \"Create the main detail component here\"\n          : \"Select a coin bro!\"}\n        {/* News feed component needs to go here */}\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}